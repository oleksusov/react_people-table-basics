{"version":3,"sources":["components/PageNavLink/PageNavLink.tsx","components/Navbar/Navbar.tsx","api.ts","types/ErrorType.ts","components/Loader/Loader.tsx","components/PersonLink/PersonLink.tsx","components/PeopleTable/PeopleTable.tsx","components/Pages/PeoplePage/PeoplePage.tsx","components/Pages/HomePage/HomePage.tsx","App.tsx","index.tsx"],"names":["PageNavLink","to","text","className","isActive","classNames","Navbar","role","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","ErrorType","Loader","PersonLink","person","slug","sex","name","PeopleTable","people","selectedPerson","map","mother","find","human","motherName","father","fatherName","born","died","PeoplePage","useParams","useState","setPeople","NONE","error","setError","isLoaded","setIsLoaded","getPeopleFromServer","peopleFromServer","UPLOAD_ERROR","useEffect","length","HomePage","App","path","element","replace","index","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.8a16d769.chunk.js","sourcesContent":["import { NavLink } from 'react-router-dom';\nimport classNames from 'classnames';\n\ntype Props = {\n  to: string;\n  text: string;\n};\n\nexport const PageNavLink: React.FC<Props> = ({\n  to,\n  text,\n}) => {\n  return (\n    <NavLink\n      to={to}\n      className={({ isActive }) => classNames(\n        'navbar-item',\n        { 'has-background-grey-lighter': isActive },\n      )}\n    >\n      {text}\n    </NavLink>\n  );\n};\n","import { PageNavLink } from '../PageNavLink';\n\nexport const Navbar: React.FC = () => {\n  return (\n    <nav\n      data-cy=\"nav\"\n      className=\"navbar is-fixed-top has-shadow\"\n      role=\"navigation\"\n      aria-label=\"main navigation\"\n    >\n      <div className=\"container\">\n        <div className=\"navbar-brand\">\n          <PageNavLink to=\"/\" text=\"Home\" />\n          <PageNavLink to=\"/people\" text=\"People\" />\n        </div>\n      </div>\n    </nav>\n  );\n};\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","export enum ErrorType {\n  NONE,\n  UPLOAD_ERROR = 'Unable to upload people',\n}\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Link } from 'react-router-dom';\nimport classNames from 'classnames';\n\nimport { Person } from '../../types';\n\ntype Props = {\n  person: Person;\n};\n\nexport const PersonLink: React.FC<Props> = ({ person }) => {\n  return (\n    <Link\n      to={`../${person.slug}`}\n      className={classNames({\n        'has-text-danger': person.sex === 'f',\n      })}\n    >\n      {person.name}\n    </Link>\n  );\n};\n","import classNames from 'classnames';\n\nimport { Person } from '../../types/Person';\nimport { PersonLink } from '../PersonLink';\n\ntype Props = {\n  people: Person[],\n  selectedPerson: string,\n};\n\nexport const PeopleTable: React.FC<Props> = ({\n  people,\n  selectedPerson,\n}) => {\n  return (\n    <table\n      data-cy=\"peopleTable\"\n      className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n    >\n      <thead>\n        <tr>\n          <th>Name</th>\n          <th>Sex</th>\n          <th>Born</th>\n          <th>Died</th>\n          <th>Mother</th>\n          <th>Father</th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {people.map(person => {\n          const mother = people.find(human => human.name === person.motherName);\n          const father = people.find(human => human.name === person.fatherName);\n\n          return (\n            <tr\n              data-cy=\"person\"\n              key={person.slug}\n              className={classNames({\n                'has-background-warning': person.slug === selectedPerson,\n              })}\n            >\n              <td>\n                <PersonLink person={person} />\n              </td>\n              <td>{person.sex}</td>\n              <td>{person.born}</td>\n              <td>{person.died}</td>\n              <td>\n                {\n                  mother\n                    ? (<PersonLink person={mother} />)\n                    : person.motherName || '-'\n                }\n              </td>\n              <td>\n                {\n                  father\n                    ? (<PersonLink person={father} />)\n                    : person.fatherName || '-'\n                }\n              </td>\n            </tr>\n          );\n        })}\n      </tbody>\n    </table>\n  );\n};\n","import { useParams } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\n\nimport { getPeople } from '../../../api';\n\nimport { Person } from '../../../types/Person';\nimport { ErrorType } from '../../../types/ErrorType';\n\nimport { Loader } from '../../Loader';\nimport { PeopleTable } from '../../PeopleTable';\n\nexport const PeoplePage: React.FC = () => {\n  const { slug = '' } = useParams();\n\n  const [people, setPeople] = useState<Person[]>([]);\n  const [error, setError] = useState<ErrorType>(ErrorType.NONE);\n  const [isLoaded, setIsLoaded] = useState(false);\n\n  const getPeopleFromServer = async () => {\n    try {\n      setIsLoaded(true);\n      const peopleFromServer = await getPeople();\n\n      setPeople(peopleFromServer);\n    } catch {\n      setError(ErrorType.UPLOAD_ERROR);\n    } finally {\n      setIsLoaded(false);\n    }\n  };\n\n  useEffect(() => {\n    getPeopleFromServer();\n  }, []);\n\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n\n      <div className=\"block\">\n        <div className=\"box table-container\">\n          {isLoaded && (\n            <Loader />\n          )}\n\n          {error !== ErrorType.NONE && (\n            <p\n              data-cy=\"peopleLoadingError\"\n              className=\"has-text-danger\"\n            >\n              Something went wrong\n            </p>\n          )}\n\n          {!isLoaded && !people.length && (\n            <p data-cy=\"noPeopleMessage\">\n              There are no people on the server\n            </p>\n          )}\n\n          {error === ErrorType.NONE && people.length > 0 && (\n            <PeopleTable\n              people={people}\n              selectedPerson={slug}\n            />\n          )}\n        </div>\n      </div>\n    </>\n  );\n};\n","export const HomePage: React.FC = () => (\n  <h1 className=\"title\">Home Page</h1>\n);\n","import './App.scss';\nimport { Navigate, Routes, Route } from 'react-router-dom';\n\nimport { Navbar } from './components/Navbar';\nimport { PeoplePage } from './components/Pages/PeoplePage';\nimport { HomePage } from './components/Pages/HomePage';\n\nexport const App = () => {\n  return (\n    <div data-cy=\"app\">\n      <Navbar />\n\n      <main className=\"section\">\n        <div className=\"container\">\n          <Routes>\n            <Route\n              path=\"*\"\n              element={<h1 className=\"title\">Page not found</h1>}\n            />\n\n            <Route\n              path=\"/\"\n              element={<HomePage />}\n            />\n\n            <Route\n              path=\"/home\"\n              element={<Navigate to=\"/\" replace />}\n            />\n\n            <Route path=\"/people\">\n              <Route\n                index\n                element={(\n                  <PeoplePage />\n                )}\n              />\n\n              <Route\n                path=\":slug\"\n                element={(\n                  <PeoplePage />\n                )}\n              />\n            </Route>\n\n            <Route\n              path=\"*\"\n              element={<h1 className=\"title\">Page not found</h1>}\n            />\n          </Routes>\n        </div>\n      </main>\n    </div>\n  );\n};\n","import { createRoot } from 'react-dom/client';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Router>\n      <App />\n    </Router>,\n  );\n"],"sourceRoot":""}